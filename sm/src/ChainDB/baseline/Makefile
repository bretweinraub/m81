# this file was programtically generated by m80, edit it at your own risk.
#
# m80 was Built for Linux by bweinrau on bld-cmbuild4, Fri Sep 24 09:36:37 MDT 2004
# 
# Edits MAY be lost if this file is regenerated.
#
# The following line(s) is for internal use and should not be changed:
# CLISP (setq COMMAND "newModule"
# CLISP       ARGS '( "-d" "ChainDB" "-m" "database" "-D" "oracle")
# CLISP       VERSION 0.06.06)
#

M80LIB=$(shell m80 --libpath)

# The following loads local make rules.  Use this local file
# for rules, as editing this file could cause your rules to be overwritten.

localHeadRules=$(wildcard localHead.mk)
ifneq ($(localHeadRules),)
include localHead.mk
endif
MODULE_PATH=../.
include $(MODULE_PATH)/module.mk
include $(M80LIB)/make/local.mk
include $(M80LIB)/make/m80generic.mk
include $(M80LIB)/make/systemWide.mk
include $(M80LIB)/make/oracle.mk
M4_FLAGS += -DRDBMS_TYPE=$(RDBMS_TYPE)

# destructcheck	::
# 	@db_objects=$$(echo 'select count(object_name) from user_objects;' | sqlplus -S $(DATABASE_NAME)  | tail -2 | head -1 | sed 's/\s//g') ; \
# 	if [ $$db_objects -gt 0 ]; then \
# 		$(BSDECHO) -n "This might DESTROY DATABASE $(DATABASE_NAME) with $$db_objects objects in it, ARE YOU SURE? [y/n]" ; \
# 		read line ; \
# 		if [ -z "$$line" ]; then \
# 			echo Please be specific, there is no default. ; exit 1 ; \
# 		fi ; \
# 		if [ "$$line" != "y" -a "$$line" != "Y" ]; then \
# 			echo later. ; exit 1 ; \
# 		fi ; \
# 	fi 

baseline :: destructcheck ChainDB.log
SUFFIXES	=	.sql .sql.m4 
%.sql : %.sql.m4 Makefile
	@export REQUIRED_VALUES=$$(awk '$$2 == "M80_VARIABLE" {print $$3}' < $<) ; \
        echo REQUIRED_VALUES are $${REQUIRED_VALUES} ; \
        eval `varWarrior $$REQUIRED_VALUES` ; \
	if test -n "${VC_EDIT}" -a -z "${SUPPRESS_VC}"; then \
		${VC_EDIT} $@ ; \
	fi ; \
	echo $(M4) $(M4_FLAGS) $$(echo $${MACRO_DEFS} | tr \' \") $< \> $@ ; \
        if test -s $*.m4errors ; then \
           rm -f $*.m4errors ; \
        fi ; \
	eval $(M4) $(M4_FLAGS) $$(echo $${MACRO_DEFS} | tr \' \") $< 2> $*.m4errors > $@ ; \
        if test  $$? -ne 0 -o -s $*.m4errors ; then \
           echo m4 errors\; bailing out ; \
	   echo Errors from file $*.m4errors : ; \
           cat $*.m4errors ; \
           exit 1 ; \
        else  \
           rm -f $*.m4errors ; \
        fi ; \
	exit 0
sqlm4files	=	$(wildcard *.sql.m4)
derivedsqlfiles = 	$(sqlm4files:.sql.m4=.sql)
clean		::;	rm -f $(derivedsqlfiles)
m4command ::; echo $(M4) $(M4_FLAGS)
#
# The following loads local make rules.  Use this local file
# for rules, as editing this file could cause your rules to be overwritten.
#

localTailRules=$(wildcard localTail.mk)
ifneq ($(localTailRules),)
include localTail.mk
endif
