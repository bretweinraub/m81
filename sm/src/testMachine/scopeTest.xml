<ChainGang name="$(env.M80_BDF)" 
	   wwwroot="/var/www/$(env.M80_BDF)/taskData"
	   urlbase="/$(env.M80_BDF)/taskData">

  <ChainDB username="$(env.CONTROLLER_USER)" 
	   password="$(env.CONTROLLER_PASSWD)" 
	   port="$(env.CONTROLLER_PORT)"
	   host="$(env.CONTROLLER_HOST)"
	   dbtype="$(env.CONTROLLER_type)"
	   sid="$(env.CONTROLLER_SID)"/>

  <module>



    <tasks>
      <task name="scope_test_1" startAction="scope_test"/>
      <task name="scope_test_2" startAction="scope_test"/>
      <task name="scope_test_3" startAction="scope_test"/>
    </tasks>

    <actions>
      <action name="scope_test"
	      maxFailures="3"
	      command="exit 0">
	<transitionMap>
	  <transition type="returnCode" 
		      value="0" 
		      code="$thistask->transitionTo(q(__SUCCESS__))">
	    <scope field="$(taskobj.taskname)"
		   value="scope_test_1"/>
	    <scope field="$(task.tag)"
		   value="value"/>
	  </transition>
	  <transition type="returnCode" 
		      value="0" 
		      code="$thistask->transitionTo(q(__SUCCESS__))">
	    <scope field="$(taskobj.taskname)"
		   value="scope_test_2"/>
	  </transition>
	  <transition type="returnCode" value="\d+" code="$thistask->transitionTo(q(__FAILED__))"/>
	</transitionMap>
      </action>

      <action name="return0"
	      command="exit 0">
	<transitionMap>
	  <transition type="returnCode" value="^0$" code="$thistask->transitionTo(nextaction => __SUCCESS__, pop => true)"/>
	  <transition type="returnCode" value="\d+" code="$thistask->transitionTo(q(__FAILED__))"/>
	</transitionMap>
      </action> 


      <action name="scope_history_test"
	      command="exit 0">
	<transitionMap>
	  <transition type="returnCode" value="^0$"
                      code="$thistask->transitionTo(nextaction => q(return0), callback => 'bogus')">
            <scope field="$(history.return0.succeeded)" value="^$"/>
	  </transition>

	  <transition type="returnCode" value="^0$" code="$thistask->transitionTo(nextaction => __SUCCESS__)"/>
	</transitionMap>
      </action>
    </actions>

  </module>
</ChainGang>
