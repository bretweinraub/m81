#!/usr/bin/perl -w
use File::Basename;
use lib dirname($0);
use Acme::JavaTrace;
use Getopt::Long;
use dbutil;
use Data::Dumper;
use Carp;
use Env;

my $username="$ENV{CONTROLLER_USER}";
my $sid="$ENV{CONTROLLER_SID}";
my $host="$ENV{CONTROLLER_HOST}";
my $port="$ENV{CONTROLLER_PORT}";
my $password="$ENV{CONTROLLER_PASSWD}";


die "failed to connect to dbi:Oracle:host=$host;sid=$sid;port=$port" 
    unless (my $dbh = DBI->connect("dbi:Oracle:host=$host;sid=$sid;port=$port", "$username", "$password",
				{ RaiseError => 1 }));

GetOptions("task_id:i", \$task_id,
	   "nodelete", \$nodelete,
	   "verbose", \$verbose);

confess "set -task_id" unless $task_id;

while (<>) {
  SWITCH: {
      next if /^\#/;
      /export\s+([\w_]+)="(.*)"/ && do {
	  my $tag=$1;
	  my $value=$2;
          $value =~ s/\'//g;
	  if ($task_id) {
	      dbutil::runSQL($dbh, "delete from task_context where task_id = $task_id and tag = '$tag'", "true") unless $nodelete;
		dbutil::runSQL($dbh, "insert into task_context (task_id, tag, value) values ($task_id, '$tag', '$value')", "true");
	    } else {
		print STDERR "insert into task_context (task_id, tag, value) values (\$task_id, '$tag', '$value')\n";
	    }
	  last SWITCH;
      };
      confess ("failed to parse line $_");
  }
}
    
